{"version":3,"sources":["webpack:///./src/app/agenda-de-sortie/agenda-de-sortie.module.ts","webpack:///./src/app/agenda-de-sortie/agenda-de-sortie.page.html","webpack:///./src/app/agenda-de-sortie/agenda-de-sortie.page.scss","webpack:///./src/app/agenda-de-sortie/agenda-de-sortie.page.ts"],"names":[],"mappings":"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","file":"agenda-de-sortie-agenda-de-sortie-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AgendaDeSortiePage } from './agenda-de-sortie.page';\nimport { NgCalendarModule  } from 'ionic2-calendar';\nconst routes: Routes = [\n  {\n    path: '',\n    component: AgendaDeSortiePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NgCalendarModule\n  ],\n  declarations: [AgendaDeSortiePage]\n})\nexport class AgendaDeSortiePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"noir\\\">\\n    <ion-title>\\n      Agenda des sorties\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n   <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"today()\\\">Today</ion-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding style=\\\"background: none;\\\">\\n\\n  <!-- Card for adding a new event -->\\n  <ion-card>\\n    <ion-card-header tappable (click)=\\\"collapseCard = !collapseCard\\\">\\n      <ion-card-title>Ajouter un événement</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"!collapseCard\\\">\\n\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"event.title\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"event.desc\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Start</ion-label>\\n        <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"MMM D:HH:mm\\\" [(ngModel)]=\\\"event.startTime\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>End</ion-label>\\n        <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"MMM D:HH:mm\\\" [(ngModel)]=\\\"event.endTime\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>All Day?</ion-label>\\n        <ion-checkbox [(ngModel)]=\\\"event.allDay\\\"></ion-checkbox>\\n      </ion-item>\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"addEvent()\\\" [disabled]=\\\"event.title == ''\\\">Add Event</ion-button>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-row>\\n    <!-- Change the displayed calendar mode -->\\n    <ion-col size=\\\"4\\\">\\n      <ion-button expand=\\\"block\\\" [color]=\\\"calendar.mode == 'month' ? 'primary' : 'secondary'\\\" (click)=\\\"changeMode('month')\\\">Month</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\">\\n      <ion-button expand=\\\"block\\\" [color]=\\\"calendar.mode == 'week' ? 'primary' : 'secondary'\\\" (click)=\\\"changeMode('week')\\\">Week</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\">\\n      <ion-button expand=\\\"block\\\" [color]=\\\"calendar.mode == 'day' ? 'primary' : 'secondary'\\\" (click)=\\\"changeMode('day')\\\">Day</ion-button>\\n    </ion-col>\\n\\n    <!-- Move back one screen of the slides -->\\n    <ion-col size=\\\"6\\\" text-left>\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n\\n    <!-- Move forward one screen of the slides -->\\n    <ion-col size=\\\"6\\\" text-right>\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"next()\\\">\\n        <ion-icon name=\\\"arrow-forward\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n\\n  <calendar\\n          [eventSource]=\\\"eventSource\\\"\\n          [calendarMode]=\\\"calendar.mode\\\"\\n          [currentDate]=\\\"calendar.currentDate\\\"\\n          (onEventSelected)=\\\"onEventSelected($event)\\\"\\n          (onTitleChanged)=\\\"onViewTitleChanged($event)\\\"\\n          (onTimeSelected)=\\\"onTimeSelected($event)\\\"\\n          startHour=\\\"6\\\"\\n          endHour=\\\"20\\\"\\n          step=\\\"30\\\"\\n          startingDayWeek=\\\"1\\\">\\n  </calendar>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FnZW5kYS1kZS1zb3J0aWUvYWdlbmRhLWRlLXNvcnRpZS5wYWdlLnNjc3MifQ== */\"","import {Component, Inject, LOCALE_ID, OnInit, ViewChild} from '@angular/core';\nimport {CalendarComponent} from 'ionic2-calendar/calendar';\nimport {AlertController} from '@ionic/angular';\nimport {formatDate} from '@angular/common';\n\n@Component({\n  selector: 'app-agenda-de-sortie',\n  templateUrl: './agenda-de-sortie.page.html',\n  styleUrls: ['./agenda-de-sortie.page.scss'],\n})\nexport class AgendaDeSortiePage implements OnInit {\n\n  event = {\n    title: '',\n    desc: '',\n    startTime: '',\n    endTime: '',\n    allDay: false\n  };\n\n  minDate = new Date().toISOString();\n\n  eventSource = [];\n  viewTitle;\n\n  calendar = {\n    mode: 'month',\n    currentDate: new Date(),\n  };\n\n  @ViewChild(CalendarComponent) myCal: CalendarComponent;\n\n  constructor(private alertCtrl: AlertController, @Inject(LOCALE_ID) private locale: string) { }\n\n  ngOnInit() {\n    this.resetEvent();\n  }\n\n  resetEvent() {\n    this.event = {\n      title: '',\n      desc: '',\n      startTime: new Date().toISOString(),\n      endTime: new Date().toISOString(),\n      allDay: false\n    };\n  }\n  // Create the right event format and reload source\n  addEvent() {\n    let eventCopy = {\n      title: this.event.title,\n      startTime:  new Date(this.event.startTime),\n      endTime: new Date(this.event.endTime),\n      allDay: this.event.allDay,\n      desc: this.event.desc\n    }\n\n    if (eventCopy.allDay) {\n      let start = eventCopy.startTime;\n      let end = eventCopy.endTime;\n\n      eventCopy.startTime = new Date(Date.UTC(start.getUTCFullYear(), start.getUTCMonth(), start.getUTCDate()));\n      eventCopy.endTime = new Date(Date.UTC(end.getUTCFullYear(), end.getUTCMonth(), end.getUTCDate() + 1));\n    }\n\n    this.eventSource.push(eventCopy);\n    this.myCal.loadEvents();\n    this.resetEvent();\n  }\n  // Change current month/week/day\n  next() {\n    var swiper = document.querySelector('.swiper-container')['swiper'];\n    swiper.slideNext();\n  }\n\n  back() {\n    var swiper = document.querySelector('.swiper-container')['swiper'];\n    swiper.slidePrev();\n  }\n\n// Change between month/week/day\n  changeMode(mode) {\n    this.calendar.mode = mode;\n  }\n\n// Focus today\n  today() {\n    this.calendar.currentDate = new Date();\n  }\n\n// Selected date reange and hence title changed\n  onViewTitleChanged(title) {\n    this.viewTitle = title;\n  }\n\n// Calendar event was clicked\n  async onEventSelected(event) {\n    // Use Angular date pipe for conversion\n    let start = formatDate(event.startTime, 'medium', this.locale);\n    let end = formatDate(event.endTime, 'medium', this.locale);\n\n    const alert = await this.alertCtrl.create({\n      header: event.title,\n      subHeader: event.desc,\n      message: 'From: ' + start + '<br><br>To: ' + end,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n\n// Time slot was clicked\n  onTimeSelected(ev) {\n    let selected = new Date(ev.selectedTime);\n    this.event.startTime = selected.toISOString();\n    selected.setHours(selected.getHours() + 1);\n    this.event.endTime = (selected.toISOString());\n  }\n}\n"],"sourceRoot":""}